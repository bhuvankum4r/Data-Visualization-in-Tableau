<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Data (GDP Data)' inline='true' name='federated.06madfv1l8nh0n16qv3bk00q9h4b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GDP Data' name='excel-direct.129pojz1xmy2hf1b0iyee1qomfmr'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/4th Semester/Data Visualization/Datasets/3 - GDP Data.xls' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.129pojz1xmy2hf1b0iyee1qomfmr' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:R237:no:A1:R237:1' header='no' lost='0' outcome='1' processed='3494'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Indicator Name' ordinal='1' />
            <column datatype='real' name='2002' ordinal='2' />
            <column datatype='real' name='2003' ordinal='3' />
            <column datatype='real' name='2004' ordinal='4' />
            <column datatype='real' name='2005' ordinal='5' />
            <column datatype='real' name='2006' ordinal='6' />
            <column datatype='real' name='2007' ordinal='7' />
            <column datatype='real' name='2008' ordinal='8' />
            <column datatype='real' name='2009' ordinal='9' />
            <column datatype='real' name='2010' ordinal='10' />
            <column datatype='real' name='2011' ordinal='11' />
            <column datatype='real' name='2012' ordinal='12' />
            <column datatype='real' name='2013' ordinal='13' />
            <column datatype='real' name='2014' ordinal='14' />
            <column datatype='real' name='2015' ordinal='15' />
            <column datatype='real' name='2016' ordinal='16' />
            <column datatype='real' name='2017' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.129pojz1xmy2hf1b0iyee1qomfmr' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:R237:no:A1:R237:1' header='no' lost='0' outcome='1' processed='3494'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Indicator Name' ordinal='1' />
            <column datatype='real' name='2002' ordinal='2' />
            <column datatype='real' name='2003' ordinal='3' />
            <column datatype='real' name='2004' ordinal='4' />
            <column datatype='real' name='2005' ordinal='5' />
            <column datatype='real' name='2006' ordinal='6' />
            <column datatype='real' name='2007' ordinal='7' />
            <column datatype='real' name='2008' ordinal='8' />
            <column datatype='real' name='2009' ordinal='9' />
            <column datatype='real' name='2010' ordinal='10' />
            <column datatype='real' name='2011' ordinal='11' />
            <column datatype='real' name='2012' ordinal='12' />
            <column datatype='real' name='2013' ordinal='13' />
            <column datatype='real' name='2014' ordinal='14' />
            <column datatype='real' name='2015' ordinal='15' />
            <column datatype='real' name='2016' ordinal='16' />
            <column datatype='real' name='2017' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R237:no:A1:R237:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>3494</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Indicator Name]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Indicator Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2002</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2002]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2002</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2003</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2003]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2003</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2004</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2004]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2004</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2005</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2005]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2005</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2006</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2006]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2006</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2007</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2007]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2007</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2008</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2008]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2008</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2009</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2009]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2009</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2010]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2010</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2011</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2011]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2011</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2012]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2012</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2013]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2013</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2014]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2014</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2015]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2015</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2016</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2017]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2017</remote-alias>
            <ordinal>17</ordinal>
            <hidden>true</hidden>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_99296680AD6D4745A5C682142DE32190]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[2002]' role='measure' type='quantitative' />
      <column datatype='real' name='[2003]' role='measure' type='quantitative' />
      <column datatype='real' name='[2004]' role='measure' type='quantitative' />
      <column datatype='real' name='[2005]' role='measure' type='quantitative' />
      <column datatype='real' name='[2006]' role='measure' type='quantitative' />
      <column datatype='real' name='[2007]' role='measure' type='quantitative' />
      <column datatype='real' name='[2008]' role='measure' type='quantitative' />
      <column datatype='real' name='[2009]' role='measure' type='quantitative' />
      <column datatype='real' name='[2010]' role='measure' type='quantitative' />
      <column datatype='real' name='[2011]' role='measure' type='quantitative' />
      <column datatype='real' name='[2012]' role='measure' type='quantitative' />
      <column datatype='real' name='[2013]' role='measure' type='quantitative' />
      <column datatype='real' name='[2014]' role='measure' type='quantitative' />
      <column datatype='real' name='[2015]' role='measure' type='quantitative' />
      <column datatype='real' name='[2016]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[2017]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_99296680AD6D4745A5C682142DE32190]' role='measure' type='quantitative' />
      <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country Name]' derivation='Min' name='[min:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[2002]' derivation='Sum' name='[sum:2002:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2003]' derivation='Sum' name='[sum:2003:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2004]' derivation='Sum' name='[sum:2004:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2005]' derivation='Sum' name='[sum:2005:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2006]' derivation='Sum' name='[sum:2006:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2007]' derivation='Sum' name='[sum:2007:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2008]' derivation='Sum' name='[sum:2008:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2009]' derivation='Sum' name='[sum:2009:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2011]' derivation='Sum' name='[sum:2011:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2012]' derivation='Sum' name='[sum:2012:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2013]' derivation='Sum' name='[sum:2013:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2014]' derivation='Sum' name='[sum:2014:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2015]' derivation='Sum' name='[sum:2015:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2016]' derivation='Sum' name='[sum:2016:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:Country Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[min:Country Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2014:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2006:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2010:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2003:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2015:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2011:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2007:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2012:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2004:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2005:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2016:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2013:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2008:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2002:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2009:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_99296680AD6D4745A5C682142DE32190'>
            <properties context=''>
              <relation connection='excel-direct.129pojz1xmy2hf1b0iyee1qomfmr' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:R237:no:A1:R237:1' header='no' lost='0' outcome='1' processed='3494'>
                  <column datatype='string' name='Country Name' ordinal='0' />
                  <column datatype='string' name='Indicator Name' ordinal='1' />
                  <column datatype='real' name='2002' ordinal='2' />
                  <column datatype='real' name='2003' ordinal='3' />
                  <column datatype='real' name='2004' ordinal='4' />
                  <column datatype='real' name='2005' ordinal='5' />
                  <column datatype='real' name='2006' ordinal='6' />
                  <column datatype='real' name='2007' ordinal='7' />
                  <column datatype='real' name='2008' ordinal='8' />
                  <column datatype='real' name='2009' ordinal='9' />
                  <column datatype='real' name='2010' ordinal='10' />
                  <column datatype='real' name='2011' ordinal='11' />
                  <column datatype='real' name='2012' ordinal='12' />
                  <column datatype='real' name='2013' ordinal='13' />
                  <column datatype='real' name='2014' ordinal='14' />
                  <column datatype='real' name='2015' ordinal='15' />
                  <column datatype='real' name='2016' ordinal='16' />
                  <column datatype='real' name='2017' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bar Graph'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Data)' name='federated.06madfv1l8nh0n16qv3bk00q9h4b' />
          </datasources>
          <datasource-dependencies datasource='federated.06madfv1l8nh0n16qv3bk00q9h4b'>
            <column datatype='real' name='[2006]' role='measure' type='quantitative' />
            <column datatype='real' name='[2007]' role='measure' type='quantitative' />
            <column datatype='real' name='[2008]' role='measure' type='quantitative' />
            <column datatype='real' name='[2009]' role='measure' type='quantitative' />
            <column datatype='real' name='[2010]' role='measure' type='quantitative' />
            <column datatype='real' name='[2011]' role='measure' type='quantitative' />
            <column datatype='real' name='[2012]' role='measure' type='quantitative' />
            <column datatype='real' name='[2013]' role='measure' type='quantitative' />
            <column datatype='real' name='[2014]' role='measure' type='quantitative' />
            <column datatype='real' name='[2015]' role='measure' type='quantitative' />
            <column datatype='real' name='[2016]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2006]' derivation='Sum' name='[sum:2006:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2007]' derivation='Sum' name='[sum:2007:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2008]' derivation='Sum' name='[sum:2008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2009]' derivation='Sum' name='[sum:2009:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2011]' derivation='Sum' name='[sum:2011:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2012]' derivation='Sum' name='[sum:2012:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2013]' derivation='Sum' name='[sum:2013:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2014]' derivation='Sum' name='[sum:2014:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015]' derivation='Sum' name='[sum:2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2016]' derivation='Sum' name='[sum:2016:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2006:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2007:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2008:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2009:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2010:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2011:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2012:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2013:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2014:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2015:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2016:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]'>
            <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belgium&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]</column>
            <column>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[Multiple Values]' value='c&quot;$&quot;#,##0,,,.0B;(&quot;$&quot;#,##0,,,.0B)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]' value='Year'>
              <formatted-text>
                <run>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]' />
              <text column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[Multiple Values]</rows>
        <cols>([federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk] / [federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{5943ED2B-A8F4-47F2-A6E4-7772C82766B7}' />
    </worksheet>
    <worksheet name='Bhutan v/s Costa Rica'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Data)' name='federated.06madfv1l8nh0n16qv3bk00q9h4b' />
          </datasources>
          <datasource-dependencies datasource='federated.06madfv1l8nh0n16qv3bk00q9h4b'>
            <column datatype='real' name='[2002]' role='measure' type='quantitative' />
            <column datatype='real' name='[2003]' role='measure' type='quantitative' />
            <column datatype='real' name='[2004]' role='measure' type='quantitative' />
            <column datatype='real' name='[2005]' role='measure' type='quantitative' />
            <column datatype='real' name='[2006]' role='measure' type='quantitative' />
            <column datatype='real' name='[2007]' role='measure' type='quantitative' />
            <column datatype='real' name='[2008]' role='measure' type='quantitative' />
            <column datatype='real' name='[2009]' role='measure' type='quantitative' />
            <column datatype='real' name='[2010]' role='measure' type='quantitative' />
            <column datatype='real' name='[2011]' role='measure' type='quantitative' />
            <column datatype='real' name='[2012]' role='measure' type='quantitative' />
            <column datatype='real' name='[2013]' role='measure' type='quantitative' />
            <column datatype='real' name='[2014]' role='measure' type='quantitative' />
            <column datatype='real' name='[2015]' role='measure' type='quantitative' />
            <column datatype='real' name='[2016]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2002]' derivation='Sum' name='[sum:2002:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2003]' derivation='Sum' name='[sum:2003:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2004]' derivation='Sum' name='[sum:2004:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2005]' derivation='Sum' name='[sum:2005:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2006]' derivation='Sum' name='[sum:2006:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2007]' derivation='Sum' name='[sum:2007:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2008]' derivation='Sum' name='[sum:2008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2009]' derivation='Sum' name='[sum:2009:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2011]' derivation='Sum' name='[sum:2011:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2012]' derivation='Sum' name='[sum:2012:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2013]' derivation='Sum' name='[sum:2013:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2014]' derivation='Sum' name='[sum:2014:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015]' derivation='Sum' name='[sum:2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2016]' derivation='Sum' name='[sum:2016:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2002:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2003:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2004:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2005:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2006:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2007:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2008:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2009:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2010:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2011:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2012:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2013:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2014:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2015:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2016:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Costa Rica&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]</column>
            <column>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[Multiple Values]' value='c&quot; $&quot;#,##0,,,.0B;&quot; $&quot;-#,##0,,,.0B' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]' />
              <text column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[Multiple Values]</rows>
        <cols>([federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk] / [federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{30C60F1C-94E5-4E35-BC52-6E3C900B3652}' />
    </worksheet>
    <worksheet name='Circle View'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Data)' name='federated.06madfv1l8nh0n16qv3bk00q9h4b' />
          </datasources>
          <datasource-dependencies datasource='federated.06madfv1l8nh0n16qv3bk00q9h4b'>
            <column datatype='real' name='[2004]' role='measure' type='quantitative' />
            <column datatype='real' name='[2005]' role='measure' type='quantitative' />
            <column datatype='real' name='[2006]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2004]' derivation='Sum' name='[sum:2004:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2005]' derivation='Sum' name='[sum:2005:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2006]' derivation='Sum' name='[sum:2006:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mexico&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2004:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2005:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2006:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2004:qk] + ([federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2005:qk] + [federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2006:qk]))</rows>
        <cols />
      </table>
      <simple-id uuid='{6BED3D7F-B555-4B2D-86B0-5ADEEACC4029}' />
    </worksheet>
    <worksheet name='Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Data)' name='federated.06madfv1l8nh0n16qv3bk00q9h4b' />
          </datasources>
          <datasource-dependencies datasource='federated.06madfv1l8nh0n16qv3bk00q9h4b'>
            <column datatype='real' name='[2010]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Asia&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;South Asia&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2010:qk]' value='c&quot; $&quot;#,##0,,,.0B;&quot; $&quot;-#,##0,,,.0B' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]' />
              <text column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2010:qk]' />
              <text column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]' />
              <lod column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2010:qk]' />
              <size column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2010:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{09CF669E-35A6-4705-B9DD-A9F8F8FC2175}' />
    </worksheet>
    <worksheet name='Symbol Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Data)' name='federated.06madfv1l8nh0n16qv3bk00q9h4b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.06madfv1l8nh0n16qv3bk00q9h4b'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]' />
              <lod column='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[Latitude (generated)]</rows>
        <cols>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1C53DA08-467F-47BA-B81B-0D18B626B1F2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='47125' id='3' name='Symbol Map' w='45714' x='786' y='1375' />
        <zone h='38000' id='4' name='Bar Graph' w='32500' x='214' y='49000' />
        <zone h='35500' id='5' name='Bar Graph' pane-specification-id='0' param='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]' type-v2='color' w='10000' x='33000' y='52375' />
        <zone h='37750' id='6' name='Pie Chart' w='20357' x='66429' y='49250' />
        <zone h='14750' id='7' name='Pie Chart' pane-specification-id='0' param='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]' type-v2='color' w='10000' x='87071' y='59875' />
        <zone h='46125' id='8' name='Bhutan v/s Costa Rica' w='48786' x='48571' y='2000' />
        <zone h='37625' id='9' name='Circle View' w='26143' x='39143' y='49125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98244' id='14' param='vert' type-v2='layout-flow' w='99152' x='424' y='878'>
                <zone fixed-size='280' h='47125' id='3' is-fixed='true' name='Symbol Map' w='45714' x='786' y='1375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46125' id='8' is-fixed='true' name='Bhutan v/s Costa Rica' w='48786' x='48571' y='2000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38000' id='4' is-fixed='true' name='Bar Graph' w='32500' x='214' y='49000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='35500' id='5' name='Bar Graph' pane-specification-id='0' param='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]' type-v2='color' w='10000' x='33000' y='52375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37625' id='9' is-fixed='true' name='Circle View' w='26143' x='39143' y='49125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37750' id='6' is-fixed='true' name='Pie Chart' w='20357' x='66429' y='49250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14750' id='7' name='Pie Chart' pane-specification-id='0' param='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]' type-v2='color' w='10000' x='87071' y='59875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{34FA64ED-43D5-44A1-9D4E-341D0468643B}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' show-side-pane='false' source-height='37'>
    <window class='worksheet' name='Symbol Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE33286A-65DC-4A2F-AB6A-E3546A197339}' />
    </window>
    <window class='worksheet' name='Bar Graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]</field>
            <field>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{759B96DF-0F8F-462C-A5A4-58F131059833}' />
    </window>
    <window class='worksheet' name='Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[sum:2010:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]</field>
            <field>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DFFB1B79-AE50-42D9-BC20-97A2108FE0F6}' />
    </window>
    <window class='worksheet' name='Bhutan v/s Costa Rica'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]</field>
            <field>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B9551F9A-2298-42FC-9B55-DD6EFFD3FEA6}' />
    </window>
    <window class='worksheet' name='Circle View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]</field>
            <field>[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8FEE2F8-0352-40A2-A48F-790EE086AFC3}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Bar Graph'>
          <zoom type='entire-view' />
          <highlight field='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Bhutan v/s Costa Rica'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Circle View'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Pie Chart'>
          <zoom type='entire-view' />
          <highlight field='[federated.06madfv1l8nh0n16qv3bk00q9h4b].[none:Country Name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Symbol Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C3E621AC-D121-4C0F-8496-9A51DFFE093F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar Graph' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bhutan v/s Costa Rica' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Circle View' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pie Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Symbol Map' width='192'>
      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
      C8cYPPw/R8HWEApnwxYAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
